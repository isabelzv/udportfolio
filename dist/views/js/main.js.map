{"version":3,"sources":["main.js"],"names":["logAverageFrame","times","numberOfEntries","length","sum","i","duration","console","log","onScroll","lastScrollTop","document","body","scrollTop","requestTick","ticking","requestAnimationFrame","update","frame","window","performance","mark","items","getElementsByClassName","cachedScrollTop","cachedPhase","Math","sin","pos","basicLeft","style","left","display","nameWorker","Worker","onmessage","e","name","data","id","pizzaName","getElementById","innerHTML","pizzaWorker","ingredients","ul","pizzaElementGenerator","pizzaContainer","pizzaImageContainer","pizzaImage","pizzaDescriptionContainer","createElement","classList","add","width","height","src","appendChild","postMessage","resizePizzas","size","changeSliderLabel","querySelector","changePizzaSizes","newwidth","randomPizzas","measure","timeToResize","getEntriesByName","pizzasDiv","timeToGenerate","addEventListener","cols","s","elem","className","top","floor"],"mappings":"AA+iBA,QAASA,iBAAgBC,GAGvB,IAAK,GAFDC,GAAkBD,EAAME,OACxBC,EAAM,EACDC,EAAIH,EAAkB,EAAGG,EAAIH,EAAkB,GAAIG,IAC1DD,GAAYH,EAAMI,GAAGC,QAEvBC,SAAQC,IAAI,4CAA8CJ,EAAM,GAAK,MAMvE,QAASK,YACLC,cAAgBC,SAASC,KAAKC,UAC9BC,cAOJ,QAASA,eACDC,UACAC,sBAAsBC,QACtBF,SAAU,GAUlB,QAASE,UACPC,QACAC,OAAOC,YAAYC,KAAK,mBASxB,KAAK,GAPDC,GAAQX,SAASY,uBAAuB,SAExCC,EAAkBd,cAAgB,KAElCe,KAGKpB,EAAI,EAAO,EAAJA,EAAOA,IACrBoB,EAAYpB,GAAK,IAAMqB,KAAKC,IAAIH,EAAmBnB,EAAI,GAAM,GAG/D,KAAKA,EAAI,EAAGA,EAAIiB,EAAMnB,OAAQE,IAC5BuB,IAAMN,EAAMjB,GAAGwB,UAAYJ,EAAYpB,EAAI,GAE3CiB,EAAMjB,GAAGyB,MAAMC,KAAOH,IAAM,KAGxBA,IAAM,GAAK,IACbN,EAAMjB,GAAGyB,MAAME,QAAU,OAK7BjB,UAAU,EA5NZ,GAAIkB,YAAa,GAAIC,QAAO,mBAC5BD,YAAWE,UAAY,SAASC,GAG9B,GAFAC,KAAOD,EAAEE,KAAKD,KACdE,GAAKH,EAAEE,KAAKC,GACRF,KAAM,CACR,GAAIG,GAAY7B,SAAS8B,eAAe,YAAcF,GAEtD,aADAC,EAAUE,UAAYL,MAGxB9B,QAAQC,IAAI,qBAGd,IAAImC,aAAc,GAAIT,QAAO,oBAC7BS,aAAYR,UAAY,SAASC,GAG/B,GAFAQ,YAAcR,EAAEE,KAAKM,YACrBL,GAAKH,EAAEE,KAAKC,GACRK,YAAa,CACf,GAAIC,GAAKlC,SAAS8B,eAAe,mBAAqBF,GAEtD,aADAM,EAAGH,UAAYE,aAIjBrC,QAAQC,IAAI,4BAId,IAAIsC,uBAAwB,SAASzC,GACnC,GAAI0C,GACAC,EACAC,EACAC,EACAV,EACAK,CAiCJ,OA/BAE,GAAkBpC,SAASwC,cAAc,OACzCH,EAAsBrC,SAASwC,cAAc,OAC7CF,EAAatC,SAASwC,cAAc,OACpCD,EAA4BvC,SAASwC,cAAc,OAEnDJ,EAAeK,UAAUC,IAAI,wBAC7BN,EAAejB,MAAMwB,MAAQ,SAC7BP,EAAejB,MAAMyB,OAAS,QAC9BR,EAAeR,GAAK,QAAUlC,EAC9B2C,EAAoBI,UAAUC,IAAI,YAElCJ,EAAWO,IAAM,mBACjBP,EAAWG,UAAUC,IAAI,kBACzBL,EAAoBS,YAAYR,GAChCF,EAAeU,YAAYT,GAG3BE,EAA0BE,UAAUC,IAAI,YAExCb,EAAY7B,SAASwC,cAAc,MACnCX,EAAUD,GAAK,YAAclC,EAC7B6C,EAA0BO,YAAYjB,GACtCP,WAAWyB,aAAanB,GAAKlC,IAE7BwC,EAAKlC,SAASwC,cAAc,MAC5BN,EAAGN,GAAK,mBAAqBlC,EAC7B6C,EAA0BO,YAAYZ,GACtCF,YAAYe,aAAanB,GAAKlC,IAE9B0C,EAAeU,YAAYP,GAEpBH,GAILY,aAAe,SAASC,GAI1B,QAASC,GAAkBD,GACzB,OAAOA,GACL,IAAK,IAEH,YADAjD,SAASmD,cAAc,cAAcpB,UAAY,QAEnD,KAAK,IAEH,YADA/B,SAASmD,cAAc,cAAcpB,UAAY,SAEnD,KAAK,IAEH,YADA/B,SAASmD,cAAc,cAAcpB,UAAY,QAEnD,SACEnC,QAAQC,IAAI,6BAalB,QAASuD,GAAkBH,GACzB,OAAOA,GACL,IAAK,IACHI,SAAW,EACX,MACF,KAAK,IACHA,SAAW,IACX,MACF,KAAK,IACHA,SAAW,EACX,MACF,SACEzD,QAAQC,IAAI,uBAKhB,IAAK,GAFDyD,GAAetD,SAASY,uBAAuB,yBAE1ClB,EAAI,EAAGA,EAAI4D,EAAa9D,OAAQE,IAEvC4D,EAAa5D,GAAGyB,MAAMwB,MAAQU,SAAW,IA/C7C7C,OAAOC,YAAYC,KAAK,qBAmBxBwC,EAAkBD,GA0ClBG,EAAiBH,GAGjBzC,OAAOC,YAAYC,KAAK,mBACxBF,OAAOC,YAAY8C,QAAQ,uBAAwB,oBAAqB,kBACxE,IAAIC,GAAehD,OAAOC,YAAYgD,iBAAiB,uBACvD7D,SAAQC,IAAI,0BAA4B2D,EAAa,GAAG7D,SAAW,MAGrEa,QAAOC,YAAYC,KAAK,wBAGxB,KAAK,GAAIhB,GAAI,EAAO,IAAJA,EAASA,IAAK,CAC5B,GAAIgE,WAAY1D,SAAS8B,eAAe,eACxC4B,WAAUZ,YAAYX,sBAAsBzC,IAI9Cc,OAAOC,YAAYC,KAAK,uBACxBF,OAAOC,YAAY8C,QAAQ,2BAA4B,wBAAyB,sBAChF,IAAII,gBAAiBnD,OAAOC,YAAYgD,iBAAiB,2BACzD7D,SAAQC,IAAI,oCAAsC8D,eAAe,GAAGhE,SAAW,KAI/E,IAAIY,OAAQ,EAYRR,cAAgB,EAChBK,SAAU,CAuDdI,QAAOoD,iBAAiB,SAAU9D,UAAU,GAG5CE,SAAS4D,iBAAiB,mBAAoB,WAG5C,IAAK,GAFDC,GAAO,EACPC,EAAI,IACCpE,EAAI,EAAO,GAAJA,EAAQA,IAAK,CAC3B,GAAIqE,GAAO/D,SAASwC,cAAc,MAClCuB,GAAKC,UAAY,QACjBD,EAAKlB,IAAM,yBAIXkB,EAAK7C,UAAaxB,EAAImE,EAAQC,EAC9BC,EAAK5C,MAAM8C,IAAOlD,KAAKmD,MAAMxE,EAAImE,GAAQC,EAAK,KAC9C9D,SAASmD,cAAc,kBAAkBL,YAAYiB","file":"main.js","sourcesContent":["/*\nWelcome to the 60fps project! Your goal is to make Cam's Pizzeria website run\njank-free at 60 frames per second.\n\nThere are two major issues in this code that lead to sub-60fps performance. Can\nyou spot and fix both?\n\n\nBuilt into the code, you'll find a few instances of the User Timing API\n(window.performance), which will be console.log()ing frame rate data into the\nbrowser console. To learn more about User Timing API, check out:\nhttp://www.html5rocks.com/en/tutorials/webperformance/usertiming/\n\nCreator:\nCameron Pittman, Udacity Course Developer\ncameron *at* udacity *dot* com\n*/\n\n// As you may have realized, this website randomly generates pizzas.\n\n// var pizzaIngredients = {};\n// pizzaIngredients.meats = [\n//   \"Pepperoni\",\n//   \"Sausage\",\n//   \"Fennel Sausage\",\n//   \"Spicy Sausage\",\n//   \"Chicken\",\n//   \"BBQ Chicken\",\n//   \"Chorizo\",\n//   \"Chicken Andouille\",\n//   \"Salami\",\n//   \"Tofu\",\n//   \"Bacon\",\n//   \"Canadian Bacon\",\n//   \"Proscuitto\",\n//   \"Italian Sausage\",\n//   \"Ground Beef\",\n//   \"Anchovies\",\n//   \"Turkey\",\n//   \"Ham\",\n//   \"Venison\",\n//   \"Lamb\",\n//   \"Duck\",\n//   \"Soylent Green\",\n//   \"Carne Asada\",\n//   \"Soppressata Picante\",\n//   \"Coppa\",\n//   \"Pancetta\",\n//   \"Bresola\",\n//   \"Lox\",\n//   \"Guanciale\",\n//   \"Chili\",\n//   \"Beef Jerky\",\n//   \"Pastrami\",\n//   \"Kielbasa\",\n//   \"Scallops\",\n//   \"Filet Mignon\"\n// ];\n// pizzaIngredients.nonMeats = [\n//   \"White Onions\",\n//   \"Red Onions\",\n//   \"Sauteed Onions\",\n//   \"Green Peppers\",\n//   \"Red Peppers\",\n//   \"Banana Peppers\",\n//   \"Ghost Peppers\",\n//   \"Habanero Peppers\",\n//   \"Jalapeno Peppers\",\n//   \"Stuffed Peppers\",\n//   \"Spinach\",\n//   \"Tomatoes\",\n//   \"Pineapple\",\n//   \"Pear Slices\",\n//   \"Apple Slices\",\n//   \"Mushrooms\",\n//   \"Arugula\",\n//   \"Basil\",\n//   \"Fennel\",\n//   \"Rosemary\",\n//   \"Cilantro\",\n//   \"Avocado\",\n//   \"Guacamole\",\n//   \"Salsa\",\n//   \"Swiss Chard\",\n//   \"Kale\",\n//   \"Sun Dried Tomatoes\",\n//   \"Walnuts\",\n//   \"Artichoke\",\n//   \"Asparagus\",\n//   \"Caramelized Onions\",\n//   \"Mango\",\n//   \"Garlic\",\n//   \"Olives\",\n//   \"Cauliflower\",\n//   \"Polenta\",\n//   \"Fried Egg\",\n//   \"Zucchini\",\n//   \"Hummus\"\n// ];\n// pizzaIngredients.cheeses = [\n//   \"American Cheese\",\n//   \"Swiss Cheese\",\n//   \"Goat Cheese\",\n//   \"Mozzarella Cheese\",\n//   \"Parmesean Cheese\",\n//   \"Velveeta Cheese\",\n//   \"Gouda Cheese\",\n//   \"Muenster Cheese\",\n//   \"Applewood Cheese\",\n//   \"Asiago Cheese\",\n//   \"Bleu Cheese\",\n//   \"Boursin Cheese\",\n//   \"Brie Cheese\",\n//   \"Cheddar Cheese\",\n//   \"Chevre Cheese\",\n//   \"Havarti Cheese\",\n//   \"Jack Cheese\",\n//   \"Pepper Jack Cheese\",\n//   \"Gruyere Cheese\",\n//   \"Limberger Cheese\",\n//   \"Manchego Cheese\",\n//   \"Marscapone Cheese\",\n//   \"Pecorino Cheese\",\n//   \"Provolone Cheese\",\n//   \"Queso Cheese\",\n//   \"Roquefort Cheese\",\n//   \"Romano Cheese\",\n//   \"Ricotta Cheese\",\n//   \"Smoked Gouda\"\n// ];\n// pizzaIngredients.sauces = [\n//   \"Red Sauce\",\n//   \"Marinara\",\n//   \"BBQ Sauce\",\n//   \"No Sauce\",\n//   \"Hot Sauce\"\n// ];\n// pizzaIngredients.crusts = [\n//   \"White Crust\",\n//   \"Whole Wheat Crust\",\n//   \"Flatbread Crust\",\n//   \"Stuffed Crust\"\n// ];\n\n// // Name generator pulled from http://saturdaykid.com/usernames/generator.html\n// // Capitalizes first letter of each word\n// String.prototype.capitalize = function() {\n//   return this.charAt(0).toUpperCase() + this.slice(1);\n// };\n\n// // Pulls adjective out of array using random number sent from generator\n// function getAdj(x){\n//   switch(x) {\n//     case \"dark\":\n//       var dark = [\"dark\",\"morbid\", \"scary\", \"spooky\", \"gothic\", \"deviant\", \"creepy\", \"sadistic\", \"black\", \"dangerous\", \"dejected\", \"haunted\",\n//       \"morose\", \"tragic\", \"shattered\", \"broken\", \"sad\", \"melancholy\", \"somber\", \"dark\", \"gloomy\", \"homicidal\", \"murderous\", \"shady\", \"misty\",\n//       \"dusky\", \"ghostly\", \"shadowy\", \"demented\", \"cursed\", \"insane\", \"possessed\", \"grotesque\", \"obsessed\"];\n//       return dark;\n//     case \"color\":\n//       var colors = [\"blue\", \"green\", \"purple\", \"grey\", \"scarlet\", \"NeonGreen\", \"NeonBlue\", \"NeonPink\", \"HotPink\", \"pink\", \"black\", \"red\",\n//       \"maroon\", \"silver\", \"golden\", \"yellow\", \"orange\", \"mustard\", \"plum\", \"violet\", \"cerulean\", \"brown\", \"lavender\", \"violet\", \"magenta\",\n//       \"chestnut\", \"rosy\", \"copper\", \"crimson\", \"teal\", \"indigo\", \"navy\", \"azure\", \"periwinkle\", \"brassy\", \"verdigris\", \"veridian\", \"tan\",\n//       \"raspberry\", \"beige\", \"sandy\", \"ElectricBlue\", \"white\", \"champagne\", \"coral\", \"cyan\"];\n//       return colors;\n//     case \"whimsical\":\n//       var whimsy = [\"whimsical\", \"silly\", \"drunken\", \"goofy\", \"funny\", \"weird\", \"strange\", \"odd\", \"playful\", \"clever\", \"boastful\", \"breakdancing\",\n//       \"hilarious\", \"conceited\", \"happy\", \"comical\", \"curious\", \"peculiar\", \"quaint\", \"quirky\", \"fancy\", \"wayward\", \"fickle\", \"yawning\", \"sleepy\",\n//       \"cockeyed\", \"dizzy\", \"dancing\", \"absurd\", \"laughing\", \"hairy\", \"smiling\", \"perplexed\", \"baffled\", \"cockamamie\", \"vulgar\", \"hoodwinked\",\n//       \"brainwashed\"];\n//       return whimsy;\n//     case \"shiny\":\n//       var shiny = [\"sapphire\", \"opal\", \"silver\", \"gold\", \"platinum\", \"ruby\", \"emerald\", \"topaz\", \"diamond\", \"amethyst\", \"turquoise\",\n//       \"starlit\", \"moonlit\", \"bronze\", \"metal\", \"jade\", \"amber\", \"garnet\", \"obsidian\", \"onyx\", \"pearl\", \"copper\", \"sunlit\", \"brass\", \"brassy\",\n//       \"metallic\"];\n//       return shiny;\n//     case \"noisy\":\n//       var noisy = [\"untuned\", \"loud\", \"soft\", \"shrieking\", \"melodious\", \"musical\", \"operatic\", \"symphonic\", \"dancing\", \"lyrical\", \"harmonic\",\n//       \"orchestral\", \"noisy\", \"dissonant\", \"rhythmic\", \"hissing\", \"singing\", \"crooning\", \"shouting\", \"screaming\", \"wailing\", \"crying\", \"howling\",\n//       \"yelling\", \"hollering\", \"caterwauling\", \"bawling\", \"bellowing\", \"roaring\", \"squealing\", \"beeping\", \"knocking\", \"tapping\", \"rapping\",\n//       \"humming\", \"scatting\", \"whispered\", \"whispering\", \"rasping\", \"buzzing\", \"whirring\", \"whistling\", \"whistled\"];\n//       return noisy;\n//     case \"apocalyptic\":\n//       var apocalyptic = [\"nuclear\", \"apocalyptic\", \"desolate\", \"atomic\", \"zombie\", \"collapsed\", \"grim\", \"fallen\", \"collapsed\", \"cannibalistic\",\n//       \"radioactive\", \"toxic\", \"poisonous\", \"venomous\", \"disastrous\", \"grimy\", \"dirty\", \"undead\", \"bloodshot\", \"rusty\", \"glowing\", \"decaying\",\n//       \"rotten\", \"deadly\", \"plagued\", \"decimated\", \"rotting\", \"putrid\", \"decayed\", \"deserted\", \"acidic\"];\n//       return apocalyptic;\n//     case \"insulting\":\n//       var insulting = [\"stupid\", \"idiotic\", \"fat\", \"ugly\", \"hideous\", \"grotesque\", \"dull\", \"dumb\", \"lazy\", \"sluggish\", \"brainless\", \"slow\",\n//       \"gullible\", \"obtuse\", \"dense\", \"dim\", \"dazed\", \"ridiculous\", \"witless\", \"daft\", \"crazy\", \"vapid\", \"inane\", \"mundane\", \"hollow\", \"vacuous\",\n//       \"boring\", \"insipid\", \"tedious\", \"monotonous\", \"weird\", \"bizarre\", \"backward\", \"moronic\", \"ignorant\", \"scatterbrained\", \"forgetful\", \"careless\",\n//       \"lethargic\", \"insolent\", \"indolent\", \"loitering\", \"gross\", \"disgusting\", \"bland\", \"horrid\", \"unseemly\", \"revolting\", \"homely\", \"deformed\",\n//       \"disfigured\", \"offensive\", \"cowardly\", \"weak\", \"villainous\", \"fearful\", \"monstrous\", \"unattractive\", \"unpleasant\", \"nasty\", \"beastly\", \"snide\",\n//       \"horrible\", \"syncophantic\", \"unhelpful\", \"bootlicking\"];\n//       return insulting;\n//     case \"praise\":\n//       var praise = [\"beautiful\", \"intelligent\", \"smart\", \"genius\", \"ingenious\", \"gorgeous\", \"pretty\", \"witty\", \"angelic\", \"handsome\", \"graceful\",\n//       \"talented\", \"exquisite\", \"enchanting\", \"fascinating\", \"interesting\", \"divine\", \"alluring\", \"ravishing\", \"wonderful\", \"magnificient\", \"marvelous\",\n//       \"dazzling\", \"cute\", \"charming\", \"attractive\", \"nifty\", \"delightful\", \"superior\", \"amiable\", \"gentle\", \"heroic\", \"courageous\", \"valiant\", \"brave\",\n//       \"noble\", \"daring\", \"fearless\", \"gallant\", \"adventurous\", \"cool\", \"enthusiastic\", \"fierce\", \"awesome\", \"radical\", \"tubular\", \"fearsome\",\n//       \"majestic\", \"grand\", \"stunning\"];\n//       return praise;\n//     case \"scientific\":\n//       var scientific = [\"scientific\", \"technical\", \"digital\", \"programming\", \"calculating\", \"formulating\", \"cyberpunk\", \"mechanical\", \"technological\",\n//       \"innovative\", \"brainy\", \"chemical\", \"quantum\", \"astro\", \"space\", \"theoretical\", \"atomic\", \"electronic\", \"gaseous\", \"investigative\", \"solar\",\n//       \"extinct\", \"galactic\"];\n//       return scientific;\n//     default:\n//       var scientific = [\"scientific\", \"technical\", \"digital\", \"programming\", \"calculating\", \"formulating\", \"cyberpunk\", \"mechanical\", \"technological\",\n//       \"innovative\", \"brainy\", \"chemical\", \"quantum\", \"astro\", \"space\", \"theoretical\", \"atomic\", \"electronic\", \"gaseous\", \"investigative\", \"solar\",\n//       \"extinct\", \"galactic\"];\n//       return scientific;\n//   }\n// }\n\n// // Pulls noun out of array using random number sent from generator\n// function getNoun(y) {\n//   switch(y) {\n//     case \"animals\":\n//       var animals = [\"flamingo\", \"hedgehog\", \"owl\", \"elephant\", \"pussycat\", \"alligator\", \"dachsund\", \"poodle\", \"beagle\", \"crocodile\", \"kangaroo\",\n//       \"wallaby\", \"woodpecker\", \"eagle\", \"falcon\", \"canary\", \"parrot\", \"parakeet\", \"hamster\", \"gerbil\", \"squirrel\", \"rat\", \"dove\", \"toucan\",\n//       \"raccoon\", \"vulture\", \"peacock\", \"goldfish\", \"rook\", \"koala\", \"skunk\", \"goat\", \"rooster\", \"fox\", \"porcupine\", \"llama\", \"grasshopper\",\n//       \"gorilla\", \"monkey\", \"seahorse\", \"wombat\", \"wolf\", \"giraffe\", \"badger\", \"lion\", \"mouse\", \"beetle\", \"cricket\", \"nightingale\",\n//       \"hawk\", \"trout\", \"squid\", \"octopus\", \"sloth\", \"snail\", \"locust\", \"baboon\", \"lemur\", \"meerkat\", \"oyster\", \"frog\", \"toad\", \"jellyfish\",\n//       \"butterfly\", \"caterpillar\", \"tiger\", \"hyena\", \"zebra\", \"snail\", \"pig\", \"weasel\", \"donkey\", \"penguin\", \"crane\", \"buzzard\", \"vulture\",\n//       \"rhino\", \"hippopotamus\", \"dolphin\", \"sparrow\", \"beaver\", \"moose\", \"minnow\", \"otter\", \"bat\", \"mongoose\", \"swan\", \"firefly\", \"platypus\"];\n//       return animals;\n//     case \"profession\":\n//       var professions = [\"doctor\", \"lawyer\", \"ninja\", \"writer\", \"samurai\", \"surgeon\", \"clerk\", \"artist\", \"actor\", \"engineer\", \"mechanic\",\n//       \"comedian\", \"fireman\", \"nurse\", \"RockStar\", \"musician\", \"carpenter\", \"plumber\", \"cashier\", \"electrician\", \"waiter\", \"president\", \"governor\",\n//       \"senator\", \"scientist\", \"programmer\", \"singer\", \"dancer\", \"director\", \"mayor\", \"merchant\", \"detective\", \"investigator\", \"navigator\", \"pilot\",\n//       \"priest\", \"cowboy\", \"stagehand\", \"soldier\", \"ambassador\", \"pirate\", \"miner\", \"police\"];\n//       return professions;\n//     case \"fantasy\":\n//       var fantasy = [\"centaur\", \"wizard\", \"gnome\", \"orc\", \"troll\", \"sword\", \"fairy\", \"pegasus\", \"halfling\", \"elf\", \"changeling\", \"ghost\",\n//       \"knight\", \"squire\", \"magician\", \"witch\", \"warlock\", \"unicorn\", \"dragon\", \"wyvern\", \"princess\", \"prince\", \"king\", \"queen\", \"jester\",\n//       \"tower\", \"castle\", \"kraken\", \"seamonster\", \"mermaid\", \"psychic\", \"seer\", \"oracle\"];\n//       return fantasy;\n//     case \"music\":\n//       var music = [\"violin\", \"flute\", \"bagpipe\", \"guitar\", \"symphony\", \"orchestra\", \"piano\", \"trombone\", \"tuba\", \"opera\", \"drums\",\n//       \"harpsichord\", \"harp\", \"harmonica\", \"accordion\", \"tenor\", \"soprano\", \"baritone\", \"cello\", \"viola\", \"piccolo\", \"ukelele\", \"woodwind\", \"saxophone\",\n//       \"bugle\", \"trumpet\", \"sousaphone\", \"cornet\", \"stradivarius\", \"marimbas\", \"bells\", \"timpani\", \"bongos\", \"clarinet\", \"recorder\", \"oboe\", \"conductor\",\n//       \"singer\"];\n//       return music;\n//     case \"horror\":\n//       var horror = [\"murderer\", \"chainsaw\", \"knife\", \"sword\", \"murder\", \"devil\", \"killer\", \"psycho\", \"ghost\", \"monster\", \"godzilla\", \"werewolf\",\n//       \"vampire\", \"demon\", \"graveyard\", \"zombie\", \"mummy\", \"curse\", \"death\", \"grave\", \"tomb\", \"beast\", \"nightmare\", \"frankenstein\", \"specter\",\n//       \"poltergeist\", \"wraith\", \"corpse\", \"scream\", \"massacre\", \"cannibal\", \"skull\", \"bones\", \"undertaker\", \"zombie\", \"creature\", \"mask\", \"psychopath\",\n//       \"fiend\", \"satanist\", \"moon\", \"fullMoon\"];\n//       return horror;\n//     case \"gross\":\n//       var gross = [\"slime\", \"bug\", \"roach\", \"fluid\", \"pus\", \"booger\", \"spit\", \"boil\", \"blister\", \"orifice\", \"secretion\", \"mucus\", \"phlegm\",\n//       \"centipede\", \"beetle\", \"fart\", \"snot\", \"crevice\", \"flatulence\", \"juice\", \"mold\", \"mildew\", \"germs\", \"discharge\", \"toilet\", \"udder\", \"odor\", \"substance\",\n//       \"fluid\", \"moisture\", \"garbage\", \"trash\", \"bug\"];\n//       return gross;\n//     case \"everyday\":\n//       var everyday = [\"mirror\", \"knife\", \"fork\", \"spork\", \"spoon\", \"tupperware\", \"minivan\", \"suburb\", \"lamp\", \"desk\", \"stereo\", \"television\", \"TV\",\n//       \"book\", \"car\", \"truck\", \"soda\", \"door\", \"video\", \"game\", \"computer\", \"calender\", \"tree\", \"plant\", \"flower\", \"chimney\", \"attic\", \"kitchen\",\n//       \"garden\", \"school\", \"wallet\", \"bottle\"];\n//       return everyday;\n//     case \"jewelry\":\n//       var jewelry = [\"earrings\", \"ring\", \"necklace\", \"pendant\", \"choker\", \"brooch\", \"bracelet\", \"cameo\", \"charm\", \"bauble\", \"trinket\", \"jewelry\",\n//       \"anklet\", \"bangle\", \"locket\", \"finery\", \"crown\", \"tiara\", \"blingBling\", \"chain\", \"rosary\", \"jewel\", \"gemstone\", \"beads\", \"armband\", \"pin\",\n//       \"costume\", \"ornament\", \"treasure\"];\n//       return jewelry;\n//     case \"places\":\n//       var places = [\"swamp\", \"graveyard\", \"cemetery\", \"park\", \"building\", \"house\", \"river\", \"ocean\", \"sea\", \"field\", \"forest\", \"woods\", \"neighborhood\",\n//       \"city\", \"town\", \"suburb\", \"country\", \"meadow\", \"cliffs\", \"lake\", \"stream\", \"creek\", \"school\", \"college\", \"university\", \"library\", \"bakery\",\n//       \"shop\", \"store\", \"theater\", \"garden\", \"canyon\", \"highway\", \"restaurant\", \"cafe\", \"diner\", \"street\", \"road\", \"freeway\", \"alley\"];\n//       return places;\n//     case \"scifi\":\n//       var scifi = [\"robot\", \"alien\", \"raygun\", \"spaceship\", \"UFO\", \"rocket\", \"phaser\", \"astronaut\", \"spaceman\", \"planet\", \"star\", \"galaxy\",\n//       \"computer\", \"future\", \"timeMachine\", \"wormHole\", \"timeTraveler\", \"scientist\", \"invention\", \"martian\", \"pluto\", \"jupiter\", \"saturn\", \"mars\",\n//       \"quasar\", \"blackHole\", \"warpDrive\", \"laser\", \"orbit\", \"gears\", \"molecule\", \"electron\", \"neutrino\", \"proton\", \"experiment\", \"photon\", \"apparatus\",\n//       \"universe\", \"gravity\", \"darkMatter\", \"constellation\", \"circuit\", \"asteroid\"];\n//       return scifi;\n//     default:\n//       var scifi = [\"robot\", \"alien\", \"raygun\", \"spaceship\", \"UFO\", \"rocket\", \"phaser\", \"astronaut\", \"spaceman\", \"planet\", \"star\", \"galaxy\",\n//       \"computer\", \"future\", \"timeMachine\", \"wormHole\", \"timeTraveler\", \"scientist\", \"invention\", \"martian\", \"pluto\", \"jupiter\", \"saturn\", \"mars\",\n//       \"quasar\", \"blackHole\", \"warpDrive\", \"laser\", \"orbit\", \"gears\", \"molecule\", \"electron\", \"neutrino\", \"proton\", \"experiment\", \"photon\", \"apparatus\",\n//       \"universe\", \"gravity\", \"darkMatter\", \"constellation\", \"circuit\", \"asteroid\"];\n//       return scifi;\n//   };\n// };\n\n// var adjectives = [\"dark\", \"color\", \"whimsical\", \"shiny\", \"noise\", \"apocalyptic\", \"insulting\", \"praise\", \"scientific\"];  // types of adjectives for pizza titles\n// var nouns = [\"animals\", \"everyday\", \"fantasy\", \"gross\", \"horror\", \"jewelry\", \"places\", \"scifi\"];                        // types of nouns for pizza titles\n\n// // Generates random numbers for getAdj and getNoun functions and returns a new pizza name\n// function generator(adj, noun) {\n//   var adjectives = getAdj(adj);\n//   var nouns = getNoun(noun);\n//   var randomAdjective = parseInt(Math.random() * adjectives.length);\n//   var randomNoun = parseInt(Math.random() * nouns.length);\n//   var name = \"The \" + adjectives[randomAdjective].capitalize() + \" \" + nouns[randomNoun].capitalize();\n//   return name;\n// };\n\n// // Chooses random adjective and random noun\n// function randomName() {\n//   var randomNumberAdj = parseInt(Math.random() * adjectives.length);\n//   var randomNumberNoun = parseInt(Math.random() * nouns.length);\n//   return generator(adjectives[randomNumberAdj], nouns[randomNumberNoun]);\n// };\n\n// // These functions return a string of a random ingredient from each respective category of ingredients.\n// var selectRandomMeat = function() {\n//   var randomMeat = pizzaIngredients.meats[Math.floor((Math.random() * pizzaIngredients.meats.length))];\n//   return randomMeat;\n// }\n\n// var selectRandomNonMeat = function() {\n//   var randomNonMeat = pizzaIngredients.nonMeats[Math.floor((Math.random() * pizzaIngredients.nonMeats.length))];\n//   return randomNonMeat;\n// }\n\n// var selectRandomCheese = function() {\n//   var randomCheese = pizzaIngredients.cheeses[Math.floor((Math.random() * pizzaIngredients.cheeses.length))];\n//   return randomCheese;\n// }\n\n// var selectRandomSauce = function() {\n//   var randomSauce = pizzaIngredients.sauces[Math.floor((Math.random() * pizzaIngredients.sauces.length))];\n//   return randomSauce;\n// }\n\n// var selectRandomCrust = function() {\n//   var randomCrust = pizzaIngredients.crusts[Math.floor((Math.random() * pizzaIngredients.crusts.length))];\n//   return randomCrust;\n// }\n\n// var ingredientItemizer = function(string) {\n//   return \"<li>\" + string + \"</li>\";\n// }\n\n// // Returns a string with random pizza ingredients nested inside <li> tags\n// var makeRandomPizza = function() {\n//   var pizza = \"\";\n\n//   var numberOfMeats = Math.floor((Math.random() * 4));\n//   var numberOfNonMeats = Math.floor((Math.random() * 3));\n//   var numberOfCheeses = Math.floor((Math.random() * 2));\n\n//   for (var i = 0; i < numberOfMeats; i++) {\n//     pizza = pizza + ingredientItemizer(selectRandomMeat());\n//   }\n\n//   for (var i = 0; i < numberOfNonMeats; i++) {\n//     pizza = pizza + ingredientItemizer(selectRandomNonMeat());\n//   }\n\n//   for (var i = 0; i < numberOfCheeses; i++) {\n//     pizza = pizza + ingredientItemizer(selectRandomCheese());\n//   }\n\n//   pizza = pizza + ingredientItemizer(selectRandomSauce());\n//   pizza = pizza + ingredientItemizer(selectRandomCrust());\n\n//   return pizza;\n// }\n\n// returns a DOM element for each pizza\n// var pizzaElementGenerator = function(i) {\n//   var pizzaContainer,             // contains pizza title, image and list of ingredients\n//       pizzaImageContainer,        // contains the pizza image\n//       pizzaImage,                 // the pizza image itself\n//       pizzaDescriptionContainer,  // contains the pizza title and list of ingredients\n//       pizzaName,                  // the pizza name itself\n//       ul;                         // the list of ingredients\n\n//   pizzaContainer  = document.createElement(\"div\");\n//   pizzaImageContainer = document.createElement(\"div\");\n//   pizzaImage = document.createElement(\"img\");\n//   pizzaDescriptionContainer = document.createElement(\"div\");\n\n//   pizzaContainer.classList.add(\"randomPizzaContainer\");\n//   pizzaContainer.style.width = \"33.33%\";\n//   pizzaContainer.style.height = \"325px\";\n//   pizzaContainer.id = \"pizza\" + i;                // gives each pizza element a unique id\n//   pizzaImageContainer.classList.add(\"col-md-6\");\n\n//   pizzaImage.src = \"images/pizza.png\";\n//   pizzaImage.classList.add(\"img-responsive\");\n//   pizzaImageContainer.appendChild(pizzaImage);\n//   pizzaContainer.appendChild(pizzaImageContainer);\n\n\n//   pizzaDescriptionContainer.classList.add(\"col-md-6\");\n\n//   pizzaName = document.createElement(\"h4\");\n//   pizzaName.innerHTML = randomName();\n//   pizzaDescriptionContainer.appendChild(pizzaName);\n\n//   ul = document.createElement(\"ul\");\n//   ul.innerHTML = makeRandomPizza();\n//   pizzaDescriptionContainer.appendChild(ul);\n//   pizzaContainer.appendChild(pizzaDescriptionContainer);\n\n//   return pizzaContainer;\n// }\n\nvar nameWorker = new Worker(\"js/nameWorker.js\");\nnameWorker.onmessage = function(e) {\n  name = e.data.name;\n  id = e.data.id;\n  if (name) {\n    var pizzaName = document.getElementById(\"pizzaName\" + id);\n    pizzaName.innerHTML = name;\n    return;\n  }\n  console.log(\"No name returned.\");\n};\n\nvar pizzaWorker = new Worker(\"js/pizzaWorker.js\");\npizzaWorker.onmessage = function(e) {\n  ingredients = e.data.ingredients;\n  id = e.data.id;\n  if (ingredients) {\n    var ul = document.getElementById(\"pizzaIngredients\" + id);\n    ul.innerHTML = ingredients;\n    return;\n  }\n\n  console.log(\"No ingredients returned.\");\n};\n\n// returns a DOM element for each pizza\nvar pizzaElementGenerator = function(i) {\n  var pizzaContainer,             // contains pizza title, image and list of ingredients\n      pizzaImageContainer,        // contains the pizza image\n      pizzaImage,                 // the pizza image itself\n      pizzaDescriptionContainer,  // contains the pizza title and list of ingredients\n      pizzaName,                  // the pizza name itself\n      ul;                         // the list of ingredients\n\n  pizzaContainer  = document.createElement(\"div\");\n  pizzaImageContainer = document.createElement(\"div\");\n  pizzaImage = document.createElement(\"img\");\n  pizzaDescriptionContainer = document.createElement(\"div\");\n\n  pizzaContainer.classList.add(\"randomPizzaContainer\");\n  pizzaContainer.style.width = \"33.33%\";\n  pizzaContainer.style.height = \"325px\";\n  pizzaContainer.id = \"pizza\" + i;                // gives each pizza element a unique id\n  pizzaImageContainer.classList.add(\"col-md-6\");\n\n  pizzaImage.src = \"images/pizza.png\";\n  pizzaImage.classList.add(\"img-responsive\");\n  pizzaImageContainer.appendChild(pizzaImage);\n  pizzaContainer.appendChild(pizzaImageContainer);\n\n\n  pizzaDescriptionContainer.classList.add(\"col-md-6\");\n\n  pizzaName = document.createElement(\"h4\");\n  pizzaName.id = \"pizzaName\" + i;\n  pizzaDescriptionContainer.appendChild(pizzaName);\n  nameWorker.postMessage({\"id\":i});\n\n  ul = document.createElement(\"ul\");\n  ul.id = \"pizzaIngredients\" + i;\n  pizzaDescriptionContainer.appendChild(ul);\n  pizzaWorker.postMessage({\"id\":i});\n\n  pizzaContainer.appendChild(pizzaDescriptionContainer);\n  //}\n  return pizzaContainer;\n};\n\n// resizePizzas(size) is called when the slider in the \"Our Pizzas\" section of the website moves.\nvar resizePizzas = function(size) {\n  window.performance.mark(\"mark_start_resize\");   // User Timing API function\n\n  // Changes the value for the size of the pizza above the slider\n  function changeSliderLabel(size) {\n    switch(size) {\n      case \"1\":\n        document.querySelector(\"#pizzaSize\").innerHTML = \"Small\";\n        return;\n      case \"2\":\n        document.querySelector(\"#pizzaSize\").innerHTML = \"Medium\";\n        return;\n      case \"3\":\n        document.querySelector(\"#pizzaSize\").innerHTML = \"Large\";\n        return;\n      default:\n        console.log(\"bug in changeSliderLabel\");\n    }\n  }\n\n  changeSliderLabel(size);\n\n  // Returns the size difference to change a pizza element from one size to another. Called by changePizzaSlices(size).\n  // function determineDx (elem, size) {\n  //   var oldwidth = elem.offsetWidth;\n  //   var windowwidth = document.querySelector(\"#randomPizzas\").offsetWidth;\n  //   var oldsize = oldwidth / windowwidth;\n\n    // iterates through Pizza elements on the page and changes their widths\n  function changePizzaSizes (size) {\n    switch(size) {\n      case \"1\":\n        newwidth = 25;\n        break;\n      case \"2\":\n        newwidth = 33.3;\n        break;\n      case \"3\":\n        newwidth = 50;\n        break;\n      default:\n        console.log(\"bug in sizeSwitcher\");\n    }\n\n    var randomPizzas = document.getElementsByClassName(\".randomPizzaContainer\");\n    // for each pizza in random pizzas\n    for (var i = 0; i < randomPizzas.length; i++) {\n      // the width of the pizza is equal to newwidth\n      randomPizzas[i].style.width = newwidth + \"%\";\n    }\n  }\n\n  // Iterates through pizza elements on the page and changes their widths\n  // function changePizzaSizes(size) {\n  //   var randomPizzas = document.querySelectorAll(\".randomPizzaContainer\");\n  //   for (var i = 0; i < randomPizzas.length; i++) {\n  //     var dx = determineDx(randomPizzas[i], size);\n  //     var newwidth = (randomPizzas[i].offsetWidth + dx) + 'px';\n  //     randomPizzas[i].style.width = newwidth;\n  //   }\n  // }\n\n  changePizzaSizes(size);\n\n  // User Timing API is awesome\n  window.performance.mark(\"mark_end_resize\");\n  window.performance.measure(\"measure_pizza_resize\", \"mark_start_resize\", \"mark_end_resize\");\n  var timeToResize = window.performance.getEntriesByName(\"measure_pizza_resize\");\n  console.log(\"Time to resize pizzas: \" + timeToResize[0].duration + \"ms\");\n};\n\nwindow.performance.mark(\"mark_start_generating\"); // collect timing data\n\n// This for-loop actually creates and appends all of the pizzas when the page loads\nfor (var i = 2; i < 100; i++) {\n  var pizzasDiv = document.getElementById(\"randomPizzas\");\n  pizzasDiv.appendChild(pizzaElementGenerator(i));\n}\n\n// User Timing API again. These measurements tell you how long it took to generate the initial pizzas\nwindow.performance.mark(\"mark_end_generating\");\nwindow.performance.measure(\"measure_pizza_generation\", \"mark_start_generating\", \"mark_end_generating\");\nvar timeToGenerate = window.performance.getEntriesByName(\"measure_pizza_generation\");\nconsole.log(\"Time to generate pizzas on load: \" + timeToGenerate[0].duration + \"ms\");\n\n// Iterator for number of times the pizzas in the background have scrolled.\n// Used by updatePositions() to decide when to log the average time per frame\nvar frame = 0;\n\n// Logs the average amount of time per 10 frames needed to move the sliding background pizzas on scroll.\nfunction logAverageFrame(times) {   // times is the array of User Timing measurements from updatePositions()\n  var numberOfEntries = times.length;\n  var sum = 0;\n  for (var i = numberOfEntries - 1; i > numberOfEntries - 11; i--) {\n    sum = sum + times[i].duration;\n  }\n  console.log(\"Average time to generate last 10 frames: \" + sum / 10 + \"ms\");\n}\n\nvar lastScrollTop = 0,\n    ticking = false;\n\nfunction onScroll() {\n    lastScrollTop = document.body.scrollTop;\n    requestTick();\n}\n\n/**\n * Calls rAF if it's not already\n * been done already\n */\nfunction requestTick() {\n    if(!ticking) {\n        requestAnimationFrame(update);\n        ticking = true;\n    }\n}\n\n// The following code for sliding background pizzas was pulled from Ilya's demo found at:\n// https://www.igvita.com/slides/2012/devtools-tips-and-tricks/jank-demo.html\n\n// requestAnimationFrame code taken from http://www.html5rocks.com/en/tutorials/speed/animations/\n\n// Moves the sliding background pizzas based on scroll position\nfunction update() {\n  frame++;\n  window.performance.mark(\"mark_start_frame\");\n\n  var items = document.getElementsByClassName('mover');\n  // store the position of the scroll bar outside the loop. https://www.igvita.com/slides/2012/devtools-tips-and-tricks/jank-demo.html\n  var cachedScrollTop = lastScrollTop / 1250;\n  // initialize an empty array to store our 5 phase positions.\n  var cachedPhase = [];\n\n  // adjusted last number to 200. Don't need to be covering so much offscreen space.\n  for (var i = 0; i < 5; i++) {\n    cachedPhase[i] = 100 * Math.sin(cachedScrollTop + (i % 5)) - 200;\n  }\n\n  for (i = 0; i < items.length; i++) {\n    pos = items[i].basicLeft + cachedPhase[i % 5];\n\n    items[i].style.left = pos + 'px';\n\n    // don't paint the items if they're off the page.\n    if (pos + 77 < 0) {\n      items[i].style.display = 'none';\n    }\n  }\n\n  // sets ticking to false after updates have been made, so new AF can be requested.\n  ticking = false;\n}\n\n// runs update on scroll\nwindow.addEventListener('scroll', onScroll, false);\n\n// Generates the sliding pizzas when the page loads.\ndocument.addEventListener('DOMContentLoaded', function() {\n  var cols = 8;\n  var s = 256;\n  for (var i = 0; i < 24; i++) { //24 pizza's is enough.\n    var elem = document.createElement('img');\n    elem.className = 'mover';\n    elem.src = \"images/movingPizza.png\";\n    // commented these out because I made a new movingPizza image of that size.\n    // elem.style.height = \"100px\";\n    // elem.style.width = \"73.333px\";\n    elem.basicLeft = (i % cols) * s;\n    elem.style.top = (Math.floor(i / cols) * s) + 'px';\n    document.querySelector(\"#movingPizzas1\").appendChild(elem);\n  }\n});\n"],"sourceRoot":"/source/"}